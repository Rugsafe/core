syntax = "proto3";
// package wasmd.will;
package cosmwasm.will;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
// import "wasmd/will/params.proto";
import "cosmwasm/will/params.proto";
// import "cosmwasm/will/types.proto";

option go_package = "github.com/CosmWasm/wasmd/x/will/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);

  // create a new will
  rpc CreateWill(MsgCreateWillRequest) returns (MsgCreateWillResponse);

  // checkin into a will
  rpc CheckIn(MsgCheckInRequest) returns (MsgCheckInResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "wasmd/x/will/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless
  // overwritten).
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // params defines the module parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

// message for creating a will
message MsgCreateWillRequest {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "wasmd/x/will/MsgCreateWillRequest";
  string creator = 1;
  string name = 2;
  string beneficiary = 3;
}

// to get the will response
message MsgCreateWillResponse {
  string id = 1;
  string creator = 2;
  string name = 3;
  string beneficiary = 4;
}

// message for checking in
message MsgCheckInRequest {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "wasmd/x/will/MsgCheckInRequest";
  string creator = 1;
  string id = 2;
}

// response for checkin
message MsgCheckInResponse {}
